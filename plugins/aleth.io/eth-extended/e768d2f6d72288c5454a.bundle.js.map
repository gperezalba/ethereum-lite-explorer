{"version":3,"sources":["webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/util/react/DelayedRender.tsx","webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/LoadingBox.tsx","webpack://__aleth_io__ethExtended/./app/shared/component/LoadingBox.tsx","webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/util/react/HoverState.tsx","webpack://__aleth_io__ethExtended/../node_modules/fontfaceobserver/fontfaceobserver.standalone.js","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/SourceCode.tsx","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/SourceCodeAsyncRenderer.tsx","webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/overlay/FloatingActionBar.tsx","webpack://__aleth_io__ethExtended/./app/eth-extended/module/account/contract/component/SourceCodeSection.tsx","webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/icon/SwitchIcon.tsx","webpack://__aleth_io__ethExtended/./app/eth-extended/module/account/contract/component/ConstructorArgsSection.tsx","webpack://__aleth_io__ethExtended/./app/eth-extended/module/account/contract/component/ReadInput.tsx","webpack://__aleth_io__ethExtended/../node_modules/@puzzl/core/src/async/cancellation/OperationCanceledError.ts","webpack://__aleth_io__ethExtended/../node_modules/@puzzl/core/src/async/cancellation/internal.ts","webpack://__aleth_io__ethExtended/../node_modules/@puzzl/core/src/async/cancellation/CancellationToken.ts","webpack://__aleth_io__ethExtended/../node_modules/@puzzl/core/src/async/cancellation/CancellationTokenSource.ts","webpack://__aleth_io__ethExtended/../node_modules/@puzzl/core/src/async/Task.ts","webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/icon/KeyboardReturnIcon.tsx","webpack://__aleth_io__ethExtended/./app/eth-extended/module/account/contract/component/ReadContractSection.tsx","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/evmOpcodes.ts","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/evmLanguage.ts","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/evmDisasm.ts","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/extractSwarmSourceFromByteCode.ts","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/CreationCodeSection.tsx","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/AccountCodeRenderer.tsx","webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/control/accordion/AccordionHorizontal.tsx","webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/util/react/ScrollIntoView.tsx","webpack://__aleth_io__ethExtended/./app/shared/component/sourceCode/ContractAccordion.tsx","webpack://__aleth_io__ethExtended/./app/eth-extended/module/account/contract/component/ContractDetails.tsx","webpack://__aleth_io__ethExtended/./app/eth-extended/data/account/details/isContractAccountDetails.ts","webpack://__aleth_io__ethExtended/./app/eth-extended/module/account/contract/component/Contract.tsx","webpack://__aleth_io__ethExtended/../node_modules/@alethio/ui/src/control/Button.tsx"],"names":["DelayedRender","react__WEBPACK_IMPORTED_MODULE_1__","[object Object]","this","visible","renderTimer","setTimeout","props","delay","clearTimeout","children","tslib__WEBPACK_IMPORTED_MODULE_0__","mobx__WEBPACK_IMPORTED_MODULE_2__","mobx_react__WEBPACK_IMPORTED_MODULE_3__","LoadingBox_LoadingBox","external_react_","MessageBox","Icon","SpinnerRegular","colors","__webpack_require__","d","__webpack_exports__","component_LoadingBox_LoadingBox","dangerouslySetInnerHTML","__html","translation","get","HoverState","isHovered","handleMount","ref","addEventListener","onMouseEnter","onMouseLeave","handleUnmount","removeEventListener","_DomNodeProxy__WEBPACK_IMPORTED_MODULE_4__","onMount","onUnmount","mobx__WEBPACK_IMPORTED_MODULE_3__","mobx_react__WEBPACK_IMPORTED_MODULE_2__","l","a","b","document","attachEvent","m","body","c","k","readyState","detachEvent","t","createElement","setAttribute","appendChild","createTextNode","h","f","g","style","cssText","u","z","offsetWidth","width","scrollLeft","scrollWidth","A","parentNode","B","family","weight","stretch","C","D","E","F","G","J","test","window","navigator","vendor","exec","userAgent","parseInt","fonts","K","font","L","join","prototype","load","r","n","H","Date","getTime","Promise","M","e","Error","then","length","N","race","v","w","x","y","removeChild","I","hidden","p","q","dir","module","exports","monacoEnvPatched","SourceCode_SourceCode","tslib_es6","oldGetWorkerUrl","self","MonacoEnvironment","getWorkerUrl","moduleId","label","workerUrl","replace","encodeURIComponent","match","location","origin","editor","monaco","create","el","options","dispose","height","SourceCodeAsyncRenderer_SourceCodeAsyncRenderer","codeFontFamily","all","bind","fontfaceobserver_standalone_default","catch","value","language","Object","assign","fontFamily","fontWeight","minimap","enabled","overviewRulerLanes","hideCursorInOverviewRuler","renderLineHighlight","readOnly","emptySelectionClipboard","FloatingActionBarRoot","lib_styled_components","position","FloatingActionBar_FloatingActionBar","Disclaimer","styled_components","div","withConfig","displayName","componentId","theme","base","secondary","color","SourceCodeSection_SourceCodeSection","handleCopyCode","Clipboard","copy","sourceCode","tr","sourceCodeElement","disclaimer","dataSource","type","ContractDataSource","Ethstats","disclaimerPre","disclaimerTextLink","disclaimerPost","ExternalLink_","href","getUrl","contractAddress","Button","floating","CopyIcon","onClick","SwitchIcon_SwitchIcon","SvgIcon","fill","ConstructorArgsSection_ConstructorArgsSection","ConstructorArgsSection","showDecodedArgs","decodedArgs","byteCode","toggleDecodedArgs","byteCodeElement","decodedArgsElement","key","external_mobx_","external_mobx_react_","InputFieldWrapper","InputField","input","readInputBoxBorder","readInputBoxBg","readInputBoxText","InputFieldPlaceholder","ReadInput_ReadInput","ReadInput","external_react_default","Component","placeholder","inputFocus","autoComplete","autoCorrect","spellCheck","onFocus","onBlur","onChange","event","target","OperationCanceledError","cancellationToken","super","CANCEL","Symbol","REGISTER","CancellationToken_CancellationToken","source","cancelled","isCancelled","callback","CancellationTokenSource_CancellationTokenSource","onCancel","EventDispatcher","token","dispatch","subscribe","TaskStatus","Task_Task","func","status","NotStarted","onTaskEnded","tokenSource","InProgress","lastResult","lastError","cancel","Finished","reject","resolve","subscribeOnce","start","wait","KeyboardReturnIcon_KeyboardReturnIcon","stroke","strokeWidth","fillRule","points","ReadContractSectionRoot","readContractSectionBg","StyledLabel","Label","readContractLabelBg","InputTypeSpan","span","typedValueBoxTypeText","READ_CONTRACT_LINE_BASE_HEIGHT","ReadContractSection_ReadContractSection","ReadContractSection","abiFnInvocations","callAbiMethod","fnInvocation","inProgress","error","outputsValues","forEach","o","contractWeb3Api","abiFn","inputsValues","map","_e","resetForm","abiUtil","method","canBeCalledAutomatically","updateContractReadData","abi","dataFetchTask","buildAbiFnInvocations","getReadFunctions","cancelToken","readContractConstants","logger","abiResult","inputs","inp","inputVal","name","outputs","outp","outputVal","loadAbi","getRawData","throwIfCancelled","abiFnInvocation","idx","prevMethodIsAutoCalled","shouldAddSpacer","Fragment","Spacer","renderAutoCalledMethod","renderFormMethod","metodInvocation","output","LayoutRow","LayoutRowItem","baseHeight","TypedValueBox","iconPlacement","withinForm","evmOpcodes","00","01","02","03","04","05","06","07","08","09","0a","0b","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","20","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","50","51","52","53","54","55","56","57","58","59","5a","5b","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","f0","f1","f2","f3","f4","f5","fa","fe","fd","ff","evmLanguage","keywords","keys","unknown","tokenizer","root","cases","@keywords","@unknown","include","whitespace","evmDisasm","codes","dis","i","opcode","substr","data","slice","console","warn","BEGIN_MARKER","END_MARKER","SWARM_SOURCE_LENGTH","removeSwarmSourceFromByteCode","swarmSource","validateSwarmSource","substring","CreationCodeSection_CreationCodeSection","CreationCodeSection","showOpCode","opCode","toggleOpCode","opCodeElement","AccountCodeRenderer_AccountCodeRenderer","sourceCodeAsyncRenderer","accountCodeLoader","accountCode","languages","register","id","setMonarchTokensProvider","byteCodeEl","render","wordWrap","lineNumbers","opCodeEl","AccordionHorizontal_AccordionHorizontal","AccordionHorizontal","expanderEls","Map","handleContainerRef","containerOffsetLeft","offsetLeft","accordionState","AccordionState","onContentError","top","left","renderItems","getItems","noDataContent","items","activeItem","getActiveItem","display","item","renderExpander","config","isOpen","Height","duration","contentAnimSeconds","AccordionContentWrapper","content","contentStatus","arrowPosition","getContentArrowPosition","index","loadingDelay","loadingText","errorText","renderContent","DomNodeProxy","set","delete","size","has","RangeError","expanderEl","expanderWidth","defaultProps","childContextTypes","objectOrObservableObject","ScrollIntoView_ScrollIntoView","scrollTimeoutId","scrollIntoView","behavior","CONTENT_ANIM_SECONDS","ExpanderWrapper","AccordionFrameWrapper","spacing","contentBottom","ContractAccordion_ContractAccordion","Expander","disabled","open","locale","ThemeContext_","Consumer","marginLeft","sidebarWidth","AccordionContentFrame","minHeight","contentHeight","AccordionItemContentStatus","Loaded","ErrorBox","LoadingBox","NotAvailableBox","ACCORDION_CONTENT_HEIGHT","ContractDetails_ContractDetails","accountDetails","contractId","ValueBox","compilerVersion","optimizerEnabled","optimizerRuns","StringData","AccordionItem","hasContractSourceCode","contractDetailsStore","fetchSourceCode","s","sourceCodeEl","address","contractDataSource","hasContractAbi","contractAbi","fetchAbi","abiRawData","formattedAbi","JSON","stringify","hasContractAccountCode","fetchAccountCode","code","constructorArgs","constructorArgsRaw","constructorArgsFormatted","decodedArgsEl","accordionExtraItems","isContractAccountDetails","AccountType","Contract","Contract_Contract","account","ResponsiveContainer","forScreenWidth","lowerThan","ForFullView","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_styled_components__WEBPACK_IMPORTED_MODULE_1__","_layout_content_box_Box__WEBPACK_IMPORTED_MODULE_2__","_util_react_HoverState__WEBPACK_IMPORTED_MODULE_3__","ButtonRoot","StyledBox","colorSets","primary","hover","background","buttonPrimaryBgActive","buttonPrimaryBg","text","buttonPrimaryText","buttonSecondaryBgActive","buttonSecondaryBg","buttonSecondaryText","metrics","fontSize","lineHeight","iconSize","letterSpacing","textPaddingTop","textPaddingX"],"mappings":"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","file":"e768d2f6d72288c5454a.bundle.js","sourcesContent":["import * as React from \"react\";\r\nimport { observable } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nexport interface IDelayedRenderProps {\r\n    /** Delay in seconds */\r\n    delay: number;\r\n}\r\n\r\n@observer\r\nexport class DelayedRender extends React.Component<IDelayedRenderProps> {\r\n    @observable\r\n    private visible = false;\r\n    private renderTimer: number | undefined;\r\n\r\n    componentDidMount() {\r\n        this.renderTimer = setTimeout(() => {\r\n            this.visible = true;\r\n        }, this.props.delay * 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.renderTimer) {\r\n            clearTimeout(this.renderTimer);\r\n            this.renderTimer = void 0;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.visible ? this.props.children : null;\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport { MessageBox, IMessageBoxColors } from \"./MessageBox\";\r\nimport { SpinnerRegular } from \"./fx/SpinnerRegular\";\r\nimport { DelayedRender } from \"./util/react/DelayedRender\";\r\n\r\nexport interface ILoadingBoxProps {\r\n    colors?: IMessageBoxColors;\r\n}\r\n\r\nexport class LoadingBox extends React.Component<ILoadingBoxProps> {\r\n    render() {\r\n        return (\r\n            <DelayedRender delay={1}>\r\n                <MessageBox Icon={SpinnerRegular} colors={this.props.colors}>{this.props.children}</MessageBox>\r\n            </DelayedRender>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport { IMessageBoxProps } from \"@alethio/ui/lib/MessageBox\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport { LoadingBox as LoadingBoxBase } from \"@alethio/ui/lib/LoadingBox\";\n\nexport interface ILoadingBoxProps {\n    colors?: IMessageBoxProps[\"colors\"];\n    translation: ITranslation;\n}\n\nexport class LoadingBox extends React.Component<ILoadingBoxProps> {\n    render() {\n        return (\n            <LoadingBoxBase colors={this.props.colors}>\n                <span dangerouslySetInnerHTML={{\n                    __html: this.props.translation.get(\"general.loadingText\")\n                }} />\n            </LoadingBoxBase>\n        );\n    }\n}\n","import * as React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { observable } from \"mobx\";\r\nimport { DomNodeProxy } from \"./DomNodeProxy\";\r\n\r\ninterface IHoverStateProps {\r\n    children(hover: boolean): React.ReactElement<{}>;\r\n}\r\n\r\n@observer\r\nexport class HoverState extends React.Component<IHoverStateProps> {\r\n    @observable\r\n    private isHovered = false;\r\n\r\n    render() {\r\n        return <DomNodeProxy\r\n            onMount={this.handleMount}\r\n            onUnmount={this.handleUnmount}\r\n        >{this.props.children(this.isHovered)}</DomNodeProxy>;\r\n    }\r\n\r\n    private handleMount = (ref: HTMLElement) => {\r\n        ref.addEventListener(\"mouseenter\", this.onMouseEnter);\r\n        ref.addEventListener(\"mouseleave\", this.onMouseLeave);\r\n    }\r\n\r\n    private handleUnmount = (ref: HTMLElement) => {\r\n        ref.removeEventListener(\"mouseenter\", this.onMouseEnter);\r\n        ref.removeEventListener(\"mouseleave\", this.onMouseLeave);\r\n    }\r\n\r\n    private onMouseEnter = () => {\r\n        this.isHovered = true;\r\n    }\r\n\r\n    private onMouseLeave = () => {\r\n        this.isHovered = false;\r\n    }\r\n}\r\n","/* Font Face Observer v2.1.0 - © Bram Stein. License: BSD-3-Clause */(function(){function l(a,b){document.addEventListener?a.addEventListener(\"scroll\",b,!1):a.attachEvent(\"scroll\",b)}function m(a){document.body?a():document.addEventListener?document.addEventListener(\"DOMContentLoaded\",function c(){document.removeEventListener(\"DOMContentLoaded\",c);a()}):document.attachEvent(\"onreadystatechange\",function k(){if(\"interactive\"==document.readyState||\"complete\"==document.readyState)document.detachEvent(\"onreadystatechange\",k),a()})};function t(a){this.a=document.createElement(\"div\");this.a.setAttribute(\"aria-hidden\",\"true\");this.a.appendChild(document.createTextNode(a));this.b=document.createElement(\"span\");this.c=document.createElement(\"span\");this.h=document.createElement(\"span\");this.f=document.createElement(\"span\");this.g=-1;this.b.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.c.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";\nthis.f.style.cssText=\"max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;\";this.h.style.cssText=\"display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;\";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}\nfunction u(a,b){a.a.style.cssText=\"max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:\"+b+\";\"}function z(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+\"px\";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function A(a,b){function c(){var a=k;z(a)&&a.a.parentNode&&b(a.g)}var k=a;l(a.b,c);l(a.c,c);z(a)};function B(a,b){var c=b||{};this.family=a;this.style=c.style||\"normal\";this.weight=c.weight||\"normal\";this.stretch=c.stretch||\"normal\"}var C=null,D=null,E=null,F=null;function G(){if(null===D)if(J()&&/Apple/.test(window.navigator.vendor)){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))(?:\\.([0-9]+))/.exec(window.navigator.userAgent);D=!!a&&603>parseInt(a[1],10)}else D=!1;return D}function J(){null===F&&(F=!!document.fonts);return F}\nfunction K(){if(null===E){var a=document.createElement(\"div\");try{a.style.font=\"condensed 100px sans-serif\"}catch(b){}E=\"\"!==a.style.font}return E}function L(a,b){return[a.style,a.weight,K()?a.stretch:\"\",\"100px\",b].join(\" \")}\nB.prototype.load=function(a,b){var c=this,k=a||\"BESbswy\",r=0,n=b||3E3,H=(new Date).getTime();return new Promise(function(a,b){if(J()&&!G()){var M=new Promise(function(a,b){function e(){(new Date).getTime()-H>=n?b(Error(\"\"+n+\"ms timeout exceeded\")):document.fonts.load(L(c,'\"'+c.family+'\"'),k).then(function(c){1<=c.length?a():setTimeout(e,25)},b)}e()}),N=new Promise(function(a,c){r=setTimeout(function(){c(Error(\"\"+n+\"ms timeout exceeded\"))},n)});Promise.race([N,M]).then(function(){clearTimeout(r);a(c)},\nb)}else m(function(){function v(){var b;if(b=-1!=f&&-1!=g||-1!=f&&-1!=h||-1!=g&&-1!=h)(b=f!=g&&f!=h&&g!=h)||(null===C&&(b=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent),C=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=C&&(f==w&&g==w&&h==w||f==x&&g==x&&h==x||f==y&&g==y&&h==y)),b=!b;b&&(d.parentNode&&d.parentNode.removeChild(d),clearTimeout(r),a(c))}function I(){if((new Date).getTime()-H>=n)d.parentNode&&d.parentNode.removeChild(d),b(Error(\"\"+\nn+\"ms timeout exceeded\"));else{var a=document.hidden;if(!0===a||void 0===a)f=e.a.offsetWidth,g=p.a.offsetWidth,h=q.a.offsetWidth,v();r=setTimeout(I,50)}}var e=new t(k),p=new t(k),q=new t(k),f=-1,g=-1,h=-1,w=-1,x=-1,y=-1,d=document.createElement(\"div\");d.dir=\"ltr\";u(e,L(c,\"sans-serif\"));u(p,L(c,\"serif\"));u(q,L(c,\"monospace\"));d.appendChild(e.a);d.appendChild(p.a);d.appendChild(q.a);document.body.appendChild(d);w=e.a.offsetWidth;x=p.a.offsetWidth;y=q.a.offsetWidth;I();A(e,function(a){f=a;v()});u(e,\nL(c,'\"'+c.family+'\",sans-serif'));A(p,function(a){g=a;v()});u(p,L(c,'\"'+c.family+'\",serif'));A(q,function(a){h=a;v()});u(q,L(c,'\"'+c.family+'\",monospace'))})})};\"object\"===typeof module?module.exports=B:(window.FontFaceObserver=B,window.FontFaceObserver.prototype.load=B.prototype.load);}());\n","import * as React from \"react\";\n\nlet monacoEnvPatched = false;\n\nexport interface ISourceCodeProps {\n    monaco: typeof import(\"monaco-editor/esm/vs/editor/editor.api\");\n    options: import(\"monaco-editor/esm/vs/editor/editor.api\").editor.IEditorConstructionOptions;\n    height?: number | string;\n}\n\n/**\n * Source code component similar to react-monaco-editor, but doesn't import the entire monaco-editor\n *\n * NB: Doesn't support dynamic updates to props\n */\nexport class SourceCode extends React.Component<ISourceCodeProps> {\n    private el: HTMLElement;\n    private editor: import(\"monaco-editor/esm/vs/editor/editor.api\").editor.IStandaloneCodeEditor;\n\n    componentDidMount() {\n        setTimeout(async () => {\n            if (!monacoEnvPatched) {\n                monacoEnvPatched = true;\n                // Monkey patch the getWorkerUrl method defined by monaco-editor-webpack-plugin\n                // to allow cross-origin worker loading\n                let oldGetWorkerUrl = (self as any).MonacoEnvironment.getWorkerUrl;\n                (self as any).MonacoEnvironment.getWorkerUrl = (moduleId: string, label: string) => {\n                    let workerUrl = oldGetWorkerUrl(moduleId, label).replace(\"\\\\\", \"/\");\n                    return \"data:text/javascript;charset=utf-8,\" + encodeURIComponent(\n                        `importScripts('${\n                            workerUrl.match(/^https?:/) ? workerUrl : location.origin + \"/\" + workerUrl\n                        }');`\n                    );\n                };\n            }\n\n            this.editor = this.props.monaco.editor.create(this.el, this.props.options);\n        });\n    }\n\n    componentWillUnmount() {\n        this.editor.dispose();\n    }\n\n    render() {\n        return (\n            <div ref={ref => this.el = ref!} style={{height: this.props.height}}></div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { SourceCode } from \"./SourceCode\";\nimport FontFaceObserver from \"fontfaceobserver\";\n\nexport class SourceCodeAsyncRenderer {\n    private codeFontFamily: string | undefined;\n    private monaco: typeof import(\"monaco-editor/esm/vs/editor/editor.api\") | undefined;\n\n    constructor(private height: number) {\n\n    }\n\n    async load() {\n        this.codeFontFamily = \"Roboto Mono\";\n\n        let [monaco] = await Promise.all([\n            import(\"monaco-editor/esm/vs/editor/editor.api\"),\n            (new FontFaceObserver(this.codeFontFamily)).load().catch(e => this.codeFontFamily = void 0)\n        ]);\n        this.monaco = monaco;\n    }\n\n    render(\n        value: string,\n        language: string,\n        options?: import(\"monaco-editor/esm/vs/editor/editor.api\").editor.IEditorConstructionOptions\n    ) {\n        if (!this.monaco) {\n            throw new Error(`Monaco editor API needs to be loaded first`);\n        }\n\n        return <SourceCode\n            monaco={this.monaco}\n            height={this.height}\n            options={{\n                value,\n                language,\n                // Font needs to be loaded before the editor!\n                fontFamily: this.codeFontFamily,\n                fontWeight: \"400\",\n                minimap: {\n                    enabled: false\n                },\n                overviewRulerLanes: 0,\n                hideCursorInOverviewRuler: true,\n                renderLineHighlight: \"none\",\n                readOnly: true,\n                emptySelectionClipboard: false,\n                ...options\n            }}\n        />;\n    }\n}\n","import * as React from \"react\";\r\nimport styled, { css } from \"../styled-components\";\r\n\r\nconst FloatingActionBarRoot = styled<IFloatingActionBarProps, \"div\">(\"div\")`\r\n    position: absolute;\r\n    ${props => /^(.*)(top)(.*)$/.test(props.position || \"bottom-right\") ? css`\r\n        top: 40px;\r\n    ` : css`\r\n        bottom: 40px;\r\n    ` }\r\n    ${props => /^(.*)(left)(.*)$/.test(props.position || \"bottom-right\") ? css`\r\n        left: 40px;\r\n    ` : css`\r\n        right: 40px;\r\n    ` }\r\n    display: flex;\r\n\r\n    & > * {\r\n        margin-left: 16px;\r\n    }\r\n\r\n    & > *:first-child {\r\n        margin-left: 0;\r\n    }\r\n`;\r\n\r\nexport interface IFloatingActionBarProps {\r\n    /**\r\n     * Position for floating action bar. Default is \"bottom-right\"\r\n     */\r\n    position?: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\r\n}\r\n\r\nexport class FloatingActionBar extends React.Component<IFloatingActionBarProps> {\r\n    render() {\r\n        return (\r\n            <FloatingActionBarRoot {...this.props}>{this.props.children}</FloatingActionBarRoot>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport styled from \"@alethio/explorer-ui/lib/styled-components\";\nimport { CopyIcon } from \"@alethio/ui/lib/icon/CopyIcon\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport { FloatingActionBar } from \"@alethio/ui/lib/overlay/FloatingActionBar\";\nimport { Button } from \"@alethio/ui/lib/control/Button\";\nimport { ExternalLink } from \"plugin-api/component/ExternalLink\";\nimport { IContractDataSource, SourceType } from \"../../../../data/contract/dataSource/ContractDataSource\";\nimport { Clipboard } from \"@puzzl/browser/lib/Clipboard\";\n\nexport interface ISourceCodeSectionProps {\n    sourceCode: string;\n    sourceCodeElement: React.ReactElement<{}>;\n    contractAddress: string;\n    dataSource: IContractDataSource;\n    translation: ITranslation;\n}\n\nconst Disclaimer = styled.div`\n    font-size: 14px;\n    text-align: center;\n    color: ${props => props.theme.colors.base.secondary.color};\n`;\n\nexport class SourceCodeSection extends React.Component<ISourceCodeSectionProps> {\n    render() {\n        let { translation: tr, sourceCodeElement } = this.props;\n        let disclaimer: React.ReactNode | null = null;\n        if (this.props.dataSource.type !== SourceType.Ethstats) {\n            let [, disclaimerPre, disclaimerTextLink, disclaimerPost] =\n            tr.get(\n                \"accountView.contract.dataSource.\" + SourceType[this.props.dataSource.type] + \".label\"\n            ).match(/(.*){link}(.*){\\/link}(.*)/)!;\n            disclaimer = (\n                <Disclaimer>\n                    {disclaimerPre}\n                    <ExternalLink href={this.props.dataSource.getUrl(this.props.contractAddress)}>\n                        {disclaimerTextLink}\n                    </ExternalLink>\n                    {disclaimerPost}\n                </Disclaimer>\n            );\n        }\n\n        return (\n            <div>\n                {sourceCodeElement}\n                { disclaimer ?\n                <FloatingActionBar position=\"top-right\">\n                    { disclaimer }\n                </FloatingActionBar>\n                : null }\n                <FloatingActionBar>\n                    <Button floating Icon={CopyIcon} onClick={this.handleCopyCode}>{\n                        tr.get(\"accountView.contract.sourceCode.copyCode.label\")\n                    }</Button>\n                </FloatingActionBar>\n            </div>\n        );\n    }\n\n    private handleCopyCode = () => {\n        new Clipboard(document).copy(this.props.sourceCode);\n    }\n}\n","import * as React from \"react\";\r\nimport { ISvgIconProps, SvgIcon } from \"../util/react/SvgIcon\";\r\n\r\nexport interface ISwitchIconProps extends ISvgIconProps {\r\n\r\n}\r\n\r\nexport class SwitchIcon extends React.Component<ISwitchIconProps> {\r\n    render() {\r\n        return (\r\n            <SvgIcon {...this.props}>\r\n                <path\r\n                    /* tslint:disable-next-line:max-line-length */\r\n                    d=\"M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z\"\r\n                    fill=\"currentColor\"\r\n                />\r\n            </SvgIcon>\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport { CopyIcon } from \"@alethio/ui/lib/icon/CopyIcon\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport { FloatingActionBar } from \"@alethio/ui/lib/overlay/FloatingActionBar\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { SwitchIcon } from \"@alethio/ui/lib/icon/SwitchIcon\";\nimport { Button } from \"@alethio/ui/lib/control/Button\";\nimport { Clipboard } from \"@puzzl/browser/lib/Clipboard\";\n\nexport interface IConstructorArgsSectionProps {\n    byteCode: string;\n    decodedArgs: string;\n    byteCodeElement: React.ReactElement<{}>;\n    decodedArgsElement: React.ReactElement<{}>;\n    translation: ITranslation;\n}\n\n@observer\nexport class ConstructorArgsSection extends React.Component<IConstructorArgsSectionProps> {\n    @observable\n    private showDecodedArgs = false;\n\n    render() {\n        let { translation: tr, byteCodeElement, decodedArgsElement } = this.props;\n\n        return (\n            <div>\n                { this.showDecodedArgs ?\n                // Make sure source code element is destroyed/re-mounted every time\n                <div key={1}>{decodedArgsElement}</div> :\n                <div key={2}>{byteCodeElement}</div>\n                }\n                <FloatingActionBar>\n                    <Button floating Icon={CopyIcon} onClick={this.handleCopyCode}>{\n                        tr.get(\"accountView.contract.sourceCode.copyCode.label\")\n                    }</Button>\n                    <Button floating Icon={SwitchIcon} onClick={this.toggleDecodedArgs}>{\n                        this.showDecodedArgs ?\n                            tr.get(\"accountView.contract.arguments.switch.byteCode.label\") :\n                            tr.get(\"accountView.contract.arguments.switch.decodedArgs.label\")\n                    }</Button>\n                </FloatingActionBar>\n            </div>\n        );\n    }\n\n    private handleCopyCode = () => {\n        new Clipboard(document).copy(this.showDecodedArgs ? this.props.decodedArgs : this.props.byteCode);\n    }\n\n    private toggleDecodedArgs = () => {\n        this.showDecodedArgs = !this.showDecodedArgs;\n    }\n}\n","import React from \"react\";\nimport styled from \"@alethio/explorer-ui/lib/styled-components\";\nimport { observer } from \"mobx-react\";\nimport { observable } from \"mobx\";\n\ninterface IReadInputProps {\n    value: string;\n    name: string;\n    placeholder: React.ReactNode;\n    onChange?(value: string): void;\n}\n\nconst InputFieldWrapper = styled.div`\n    position: relative;\n    font-family: \"Roboto Mono\", monospace;\n`;\nconst InputField = styled.input`\n    border: 1px solid ${({theme}) => theme.colors.readInputBoxBorder };\n    background-color: ${({theme}) => theme.colors.readInputBoxBg };\n    color: ${({theme}) => theme.colors.readInputBoxText };\n    outline: none;\n    width: 468px;\n    padding: 9px 15px;\n    border-radius: 4px;\n    box-shadow: 0 2px 6px 0 rgba(0,0,0,0.04);\n`;\nconst InputFieldPlaceholder = styled.div`\n    position: absolute;\n    pointer-events: none;\n    font-size: 14px;\n    left: 15px;\n    top: 11px;\n`;\n\n@observer\nexport class ReadInput extends React.Component<IReadInputProps> {\n    @observable\n    private inputFocus: boolean;\n\n    render() {\n        let { value, placeholder } = this.props;\n        return (\n            <InputFieldWrapper>\n                { (!value && !this.inputFocus) ?\n                <InputFieldPlaceholder>\n                    { placeholder }\n                </InputFieldPlaceholder>\n                : null }\n                <InputField\n                    type=\"text\"\n                    value={value}\n                    autoComplete=\"off\"\n                    autoCorrect=\"off\"\n                    spellCheck={false}\n                    onFocus={() => { this.inputFocus = true; }}\n                    onBlur={() => { this.inputFocus = false; }}\n                    onChange={(event) => {\n                        if (this.props.onChange) {\n                            this.props.onChange(event.target.value);\n                        }\n                    }}\n                />\n            </InputFieldWrapper>\n        );\n    }\n}\n","import { CancellationToken } from \"./CancellationToken\";\n\nexport class OperationCanceledError extends Error {\n    constructor(public cancellationToken: CancellationToken) {\n        super();\n    }\n}\n","// Computed method names to prevent them from being publicly visible\n\n/** @internal */\nexport const CANCEL = Symbol();\n/** @internal */\nexport const REGISTER = Symbol();\n","// See https://gist.github.com/danharper/ad6ca574184589dea28d\n// Similar to the CancellationToken API from C#\n\nimport { OperationCanceledError } from \"./OperationCanceledError\";\nimport { CancellationTokenSource } from \"./CancellationTokenSource\";\nimport { CANCEL, REGISTER } from \"./internal\";\n\n/**\n * An instance of `CancellationToken` is created by a `CancellationTokenSource` and passed as argument to functions\n * that should be cancellable. The cancellable function can detect and react to the\n * token cancellation in two ways:\n *\n * 1. Call `token.isCancelled()` with a polling mechanism or at key points during its execution\n * 2. Register a callback with `token.register()` that will automatically get called when the token is cancelled\n *\n * When a token cancellation is detected, the function should throw an `OperationCanceledError`,\n * that can be caught by the caller and handled appropriately.\n * For convenience, the `throwIfCancelled` method is provided on the token object\n */\nexport class CancellationToken {\n    private cancelled = false;\n\n    /**\n     * Shouldn't be instantiated directly, but through a CancellationTokenSource\n     */\n    constructor(private source: CancellationTokenSource) {\n\n    }\n\n    /**\n     * Throws an OperationCanceledError if the token is in cancelled state\n     */\n    throwIfCancelled() {\n        if (this.isCancelled()) {\n            throw new OperationCanceledError(this);\n        }\n    }\n\n    isCancelled() {\n        return this.cancelled === true;\n    }\n\n    /** @internal method callable only from CancellationTokenSource */\n    [CANCEL]() {\n        this.cancelled = true;\n    }\n\n    /**\n     * Registers a callback to be called when the token is cancelled.\n     * If the token is already in cancelled state, the callback is immediately invoked\n     */\n    register(callback: () => void) {\n        (this.source as any)[REGISTER](callback);\n    }\n}\n","// See https://gist.github.com/danharper/ad6ca574184589dea28d\n// Similar to the CancellationToken API from C#\n\nimport { EventDispatcher } from \"../../event/EventDispatcher\";\nimport { CancellationToken } from \"./CancellationToken\";\nimport { CANCEL, REGISTER } from \"./internal\";\n\n/**\n * A token source creates a `CancellationToken` and has the ability to cancel it.\n * The token is passed to cancellable functions as a parameter\n *\n * e.g:\n * ```typescript\n * async function caller() {\n *     let tokenSource = new CancellationTokenSource();\n *     try {\n *          await cancellable(tokenSource.token);\n *     } catch (e) {\n *         if (e instanceof OperationCanceledError) {\n *             console.warn(\"Cancelled\");\n *         } else {\n *             throw e;\n *         }\n *     }\n * }\n * async function cancellable(token: CancellationToken) {\n *     // Long-running iteration\n *     for (let i = 0; i < 1000; i++) {\n *         await new Promise(resolve => setTimeout(resolve, 1000));\n *         // Check if the token is cancelled after every iteration\n *         token.throwIfCancelled();\n *     }\n * }\n * ```\n */\nexport class CancellationTokenSource {\n    public token: CancellationToken;\n    private onCancel = new EventDispatcher<this, void>();\n\n    constructor() {\n        this.token = new CancellationToken(this);\n    }\n\n    /**\n     * Issues token cancellation and notifies any registered callbacks\n     */\n    cancel() {\n        (this.token as any)[CANCEL]();\n        this.onCancel.dispatch(this, void 0);\n    }\n\n    /**\n     * @internal method only callable from CancellationToken\n     */\n    [REGISTER](callback: () => void) {\n        this.onCancel.subscribe(() => callback());\n        if (this.token.isCancelled()) {\n            callback();\n        }\n    }\n}\n","import { EventDispatcher } from \"../event/EventDispatcher\";\nimport { CancellationToken, CancellationTokenSource } from \"./cancellation\";\n\nenum TaskStatus {\n    NotStarted,\n    InProgress,\n    Finished,\n    Error\n}\n\nexport interface IAsyncCallback<TResult> {\n    (cancellationToken: CancellationToken): Promise<TResult>;\n}\n\n/**\n * Wraps an async function allowing to do actions based on its state of execution\n * (run, re-run, cancel, wait to finish)\n *\n * Similar to a regular Promise with a few key differences:\n * 1. The constructor argument is not executed immediately, but instead when start() is invoked.\n * 2. We can intercept the result (or the rejection/error) regardless of the current state of the task\n * 3. We can cancel/stop the task, by providing a CancellationToken to the constructor argument\n *\n * Example:\n * ```typescript\n * interface IBlogPost {\n *      title: string;\n * }\n * let fetchTask = new Task<IBlogPost>(() => fetch(\"/data.json\"));\n * //... in some click handler\n * fetchTask.cancel(); // Cancels if necessary\n * let blogPost = await fetchTask.start();\n * console.log(blogPost.title);\n * ```\n */\nexport class Task<TResult> {\n    private status = TaskStatus.NotStarted;\n    private lastResult: TResult | undefined;\n    private lastError: any;\n    private tokenSource: CancellationTokenSource;\n\n    private onTaskEnded = new EventDispatcher<this, void>();\n\n    constructor(private func: IAsyncCallback<TResult>) {\n        this.tokenSource = new CancellationTokenSource();\n    }\n\n    /** Reset the task to its initial (not started) state */\n    async reset() {\n        if (this.status === TaskStatus.InProgress) {\n            throw new Error(`Can't reset a running task`);\n        }\n\n        this.status = TaskStatus.NotStarted;\n        this.lastResult = (void 0)!;\n        this.lastError = void 0;\n    }\n\n    /** Cancel a running task */\n    cancel() {\n        if (this.status === TaskStatus.InProgress) {\n            this.tokenSource.cancel();\n        }\n    }\n\n    async start() {\n        if (this.status !== TaskStatus.NotStarted) {\n            throw new Error(`Task already started or completed`);\n        }\n\n        try {\n            this.lastError = void 0;\n            this.lastResult = (void 0)!;\n            this.status = TaskStatus.InProgress;\n            this.lastResult = await this.func(this.tokenSource.token);\n            this.status = TaskStatus.Finished;\n        } catch (e) {\n            this.lastError = e;\n            this.status = TaskStatus.Error;\n        }\n        this.onTaskEnded.dispatch(this, void 0);\n        if (this.status === TaskStatus.Error) {\n            throw this.lastError;\n        } else {\n            return this.lastResult as TResult;\n        }\n    }\n\n    /** Waits for task completion and returns the result (or throws an error respectively) */\n    async wait() {\n        if (this.status === TaskStatus.Error) {\n            return Promise.reject(this.lastError);\n        } else if (this.status === TaskStatus.Finished) {\n            return Promise.resolve(this.lastResult as TResult);\n        } else if (this.status === TaskStatus.InProgress) {\n            return new Promise<TResult>((resolve, reject) => {\n                this.onTaskEnded.subscribeOnce(() => {\n                    if (this.status === TaskStatus.Finished) {\n                        resolve(this.lastResult);\n                    } else {\n                        reject(this.lastError);\n                    }\n                });\n            });\n        } else if (this.status === TaskStatus.NotStarted) {\n            throw new Error(`Can't wait for task that was not even started`);\n        } else {\n            throw new Error(`Unknown task state ${this.status}`);\n        }\n    }\n\n    /** Starts the task or waits for completion if already started */\n    async startOrWait() {\n        if (this.status === TaskStatus.NotStarted) {\n            return await this.start();\n        } else {\n            return await this.wait();\n        }\n    }\n}\n","import * as React from \"react\";\r\nimport { SvgIcon, ISvgIconProps } from \"../util/react/SvgIcon\";\r\n\r\nexport interface IKeyboardReturnIconProps extends ISvgIconProps {\r\n\r\n}\r\n\r\nexport class KeyboardReturnIcon extends React.Component<IKeyboardReturnIconProps> {\r\n    render() {\r\n        return (\r\n            <SvgIcon {...this.props}>\r\n                <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                    <polygon\r\n                        points=\"18 7 18 11 6.83 11 10.41 7.41 9 6 3 12 9 18 10.41 16.59 6.83 13 20 13 20 7\"\r\n                        fill=\"currentColor\" fillRule=\"nonzero\"\r\n                    >\r\n                    </polygon>\r\n                </g>\r\n            </SvgIcon>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport styled from \"@alethio/explorer-ui/lib/styled-components\";\nimport { LayoutRow } from \"@alethio/ui/lib/layout/content/LayoutRow\";\nimport { LayoutRowItem } from \"@alethio/ui/lib/layout/content/LayoutRowItem\";\nimport { Label } from \"@alethio/ui/lib/data/Label\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport { TypedValueBox } from \"@alethio/ui/lib/layout/content/box/TypedValueBox\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { abiUtil } from \"app/eth-extended/data/contract/abiUtil\";\nimport { ReadInput } from \"app/eth-extended/module/account/contract/component/ReadInput\";\nimport { ContractWeb3Api } from \"app/eth-extended/data/contract/ContractWeb3Api\";\nimport { IAbiMemberIOValue } from \"app/eth-extended/data/contract/IAbi\";\nimport { IAbiFunction } from \"app/eth-extended/data/contract/IAbiFunction\";\nimport { Button } from \"@alethio/ui/lib/control/Button\";\nimport { Spacer } from \"@alethio/ui/lib/layout/Spacer\";\nimport { FloatingActionBar } from \"@alethio/ui/lib/overlay/FloatingActionBar\";\nimport { SwitchIcon } from \"@alethio/ui/lib/icon/SwitchIcon\";\nimport { Task } from \"@puzzl/core/lib/async/Task\";\nimport { CancellationToken, OperationCanceledError } from \"@puzzl/core/lib/async/cancellation\";\nimport { ContractAbi } from \"app/eth-extended/data/contract/ContractAbi\";\nimport { KeyboardReturnIcon } from \"@alethio/ui/lib/icon/KeyboardReturnIcon\";\nimport { ILogger } from \"plugin-api/ILogger\";\n\ninterface IAbiFnInvocation {\n    abiFn: IAbiFunction;\n    inputsValues: IAbiMemberIOValue[];\n    outputsValues: IAbiMemberIOValue[];\n    inProgress: boolean;\n    error: boolean;\n}\n\ninterface IReadContractSectionProps {\n    translation: ITranslation;\n    contractAddress: string;\n    abi: ContractAbi;\n    contractWeb3Api: ContractWeb3Api;\n    logger: ILogger;\n}\n\nconst ReadContractSectionRoot = styled.div`\n    background-color: ${({theme}) => theme.colors.readContractSectionBg};\n    padding: 20px 0 20px 241px;\n`;\nconst StyledLabel = styled(Label)`\n    color: ${({theme}) => theme.colors.readContractLabelBg};\n`;\nconst InputTypeSpan = styled.span`\n    color: ${({theme}) => theme.colors.typedValueBoxTypeText };\n    margin-left: 8px;\n`;\n\nconst READ_CONTRACT_LINE_BASE_HEIGHT = 44;\n\n@observer\nexport class ReadContractSection extends React.Component<IReadContractSectionProps> {\n    @observable\n    private abiFnInvocations: IAbiFnInvocation[] = [];\n\n    private dataFetchTask: Task<void> | undefined;\n\n    constructor(props: IReadContractSectionProps) {\n        super(props);\n\n        this.updateContractReadData(props.contractWeb3Api, props.abi, props.contractAddress);\n    }\n\n    componentWillUnmount() {\n        if (this.dataFetchTask) {\n            this.dataFetchTask.cancel();\n        }\n    }\n\n    componentDidUpdate(props: IReadContractSectionProps) {\n\n        if (\n            props.abi !== this.props.abi ||\n            props.contractAddress !== this.props.contractAddress ||\n            props.contractWeb3Api !== this.props.contractWeb3Api\n        ) {\n            this.updateContractReadData(props.contractWeb3Api, props.abi, props.contractAddress);\n        }\n    }\n\n    private updateContractReadData(\n        contractWeb3Api: ContractWeb3Api,\n        // abi: IAbiFunction[],\n        abi: ContractAbi,\n        contractAddress: string\n    ) {\n        this.buildAbiFnInvocations(abi.getReadFunctions());\n\n        if (this.dataFetchTask) {\n            this.dataFetchTask.cancel();\n        }\n        this.dataFetchTask = new Task(\n            async (cancelToken) => this.readContractConstants(contractWeb3Api, abi, contractAddress, cancelToken)\n                .catch(e => {\n                    if (!(e instanceof OperationCanceledError)) {\n                        throw e;\n                    }\n                })\n        );\n        // TODO: error and loading states for constants\n        this.dataFetchTask.start()\n            .catch(e => this.props.logger.error(e));\n    }\n\n    private buildAbiFnInvocations(abi: IAbiFunction[]) {\n        this.abiFnInvocations = abi.map(abiFn => {\n            let abiResult: IAbiFnInvocation = {\n                abiFn,\n                inputsValues: abiFn.inputs.map(inp => {\n                    let inputVal: IAbiMemberIOValue = {\n                        name: inp.name,\n                        type: inp.type,\n                        value: \"\"\n                    };\n                    return inputVal;\n                }),\n                outputsValues: abiFn.outputs.map(outp => {\n                    let outputVal: IAbiMemberIOValue = {\n                        name: outp.name,\n                        type: outp.type,\n                        value: \"\"\n                    };\n                    return outputVal;\n                }),\n                inProgress: abiUtil.method.canBeCalledAutomatically(abiFn),\n                error: false\n            };\n            return abiResult;\n        });\n    }\n\n    /**\n     * @param contractWeb3Api\n     * @param abi\n     * @param contractAddress\n     */\n    async readContractConstants(\n        contractWeb3Api: ContractWeb3Api,\n        // abi: IAbiFunction[],\n        abi: ContractAbi,\n        contractAddress: string,\n        cancelToken: CancellationToken\n    ) {\n        await contractWeb3Api.loadAbi(abi.getRawData(), contractAddress);\n        cancelToken.throwIfCancelled();\n\n        this.abiFnInvocations = await Promise.all(\n            this.abiFnInvocations.map(async (abiFnInvocation) => {\n                if (abiUtil.method.canBeCalledAutomatically(abiFnInvocation.abiFn)) {\n                    await this.callAbiMethod(abiFnInvocation);\n                    cancelToken.throwIfCancelled();\n                }\n                return abiFnInvocation;\n            })\n        );\n    }\n    private shouldAddSpacer(idx: number, abiFn: IAbiFunction, prevMethodIsAutoCalled: boolean) {\n        /**\n         * Spacer not to be added for first abi method\n         * must be added before every form required method and\n         * must be added for auto called abi method that comes after a form method\n         */\n        return !!idx && (\n            (abiUtil.method.canBeCalledAutomatically(abiFn) && !prevMethodIsAutoCalled) ||\n            (!abiUtil.method.canBeCalledAutomatically(abiFn))\n        );\n    }\n\n    render() {\n        const { translation: tr } = this.props;\n        let prevMethodIsAutoCalled = true;\n\n        return (\n            <ReadContractSectionRoot>\n                {\n                    this.abiFnInvocations.map((fnInvocation, idx) => {\n                        let shouldAddSpacer = this.shouldAddSpacer(\n                            idx, fnInvocation.abiFn, prevMethodIsAutoCalled\n                        );\n                        prevMethodIsAutoCalled = abiUtil.method.canBeCalledAutomatically(fnInvocation.abiFn);\n                        return (\n                            <React.Fragment key={idx}>\n                                { shouldAddSpacer ? <Spacer height=\"24px\" key={idx} /> : null }\n                                { abiUtil.method.canBeCalledAutomatically(fnInvocation.abiFn) ?\n                                this.renderAutoCalledMethod(fnInvocation) :\n                                this.renderFormMethod(fnInvocation) }\n                            </React.Fragment>\n                        );\n                    })\n                }\n                <FloatingActionBar>\n                    <Button floating Icon={SwitchIcon} onClick={this.resetForm}>{\n                        tr.get(\"accountView.contract.read.reset.label\")\n                    }</Button>\n                </FloatingActionBar>\n            </ReadContractSectionRoot>\n        );\n    }\n\n    private renderAutoCalledMethod(metodInvocation: IAbiFnInvocation) {\n        return metodInvocation.abiFn.outputs.map((output, idx) => (\n            <LayoutRow key={idx}>\n                <LayoutRowItem baseHeight={READ_CONTRACT_LINE_BASE_HEIGHT}>\n                    <Label>{!idx ? metodInvocation.abiFn.name : \"\"}</Label>\n                    <TypedValueBox\n                        value={metodInvocation.outputsValues ? metodInvocation.outputsValues[idx].value : \"\"}\n                        type={output.type}\n                    />\n                </LayoutRowItem>\n            </LayoutRow>\n        ));\n    }\n\n    private renderFormMethod(fnInvocation: IAbiFnInvocation) {\n        return ([\n            ...fnInvocation.inputsValues.map((input, idx) => (\n                <LayoutRow key={idx + \"input\"}>\n                    <LayoutRowItem baseHeight={READ_CONTRACT_LINE_BASE_HEIGHT}>\n                        <StyledLabel>{!idx ? fnInvocation.abiFn.name : \"\"}</StyledLabel>\n                        <ReadInput\n                            onChange={(value) => { input.value = value; }}\n                            value={input.value}\n                            name={input.name}\n                            placeholder={\n                                <>\n                                    <span>{\n                                        (input.name ||\n                                        this.props.translation.get(\n                                            \"accountView.contract.read.inputDefaultPlaceholder.label\"\n                                        ))\n                                    }</span>\n                                    <InputTypeSpan>{ input.type }</InputTypeSpan>\n                                </>\n                            }\n                        />\n                        {\n                            idx === fnInvocation.abiFn.inputs.length - 1 ?\n                            <Button onClick={() => this.callAbiMethod(fnInvocation)}\n                                Icon={KeyboardReturnIcon}\n                                iconPlacement=\"right\"\n                            >\n                                { this.props.translation.get(\"accountView.contract.read.query.label\") }\n                            </Button> :\n                            null\n                        }\n                    </LayoutRowItem>\n                </LayoutRow>\n            )),\n            ...fnInvocation.outputsValues.map((output, idx) => (\n                <LayoutRow key={idx + \"output\"}>\n                    <LayoutRowItem baseHeight={READ_CONTRACT_LINE_BASE_HEIGHT}>\n                        <Label>{\n                            !idx ?\n                            this.props.translation.get(\"accountView.contract.read.result.label\") :\n                            \"\"\n                        }</Label>\n                        <TypedValueBox\n                            value={\n                                fnInvocation.outputsValues ?\n                                fnInvocation.outputsValues[idx].value :\n                                (output.name ? output.name + \":\" : \"\")\n                            }\n                            type={output.type}\n                            withinForm\n                        />\n                    </LayoutRowItem>\n                </LayoutRow>\n            ))\n        ]);\n    }\n\n    private callAbiMethod = async (fnInvocation: IAbiFnInvocation) => {\n        // TODO: don't mutate arguments\n        fnInvocation.inProgress = true;\n        fnInvocation.error = false;\n        fnInvocation.outputsValues.forEach(o => { o.value = \"\"; });\n        try {\n            fnInvocation.outputsValues = await this.props.contractWeb3Api.callAbiMethod(\n                fnInvocation.abiFn,\n                fnInvocation.inputsValues.map(input => input.value)\n            );\n        } catch (_e) {\n            fnInvocation.error = true;\n        }\n        fnInvocation.inProgress = false;\n\n        return fnInvocation;\n    }\n\n    private resetForm = () => {\n        this.abiFnInvocations.forEach(fnInvocation => {\n            if (!abiUtil.method.canBeCalledAutomatically(fnInvocation.abiFn)) {\n                fnInvocation.inputsValues.forEach(o => { o.value = \"\"; });\n                fnInvocation.outputsValues.forEach(o => { o.value = \"\"; });\n            }\n        });\n    }\n\n}\n","export const evmOpcodes: Record<string, string> = {\n    \"00\": \"STOP\",\n    \"01\": \"ADD\",\n    \"02\": \"MUL\",\n    \"03\": \"SUB\",\n    \"04\": \"DIV\",\n    \"05\": \"SDIV\",\n    \"06\": \"MOD\",\n    \"07\": \"SMOD\",\n    \"08\": \"ADDMOD\",\n    \"09\": \"MULMOD\",\n    \"0a\": \"EXP\",\n    \"0b\": \"SIGNEXTEND\",\n    \"10\": \"LT\",\n    \"11\": \"GT\",\n    \"12\": \"SLT\",\n    \"13\": \"SGT\",\n    \"14\": \"EQ\",\n    \"15\": \"ISZERO\",\n    \"16\": \"AND\",\n    \"17\": \"OR\",\n    \"18\": \"XOR\",\n    \"19\": \"NOT\",\n    \"1a\": \"BYTE\",\n    \"1b\": \"SHL\",\n    \"1c\": \"SHR\",\n    \"1d\": \"SAR\",\n    \"20\": \"SHA3\",\n    \"30\": \"ADDRESS\",\n    \"31\": \"BALANCE\",\n    \"32\": \"ORIGIN\",\n    \"33\": \"CALLER\",\n    \"34\": \"CALLVALUE\",\n    \"35\": \"CALLDATALOAD\",\n    \"36\": \"CALLDATASIZE\",\n    \"37\": \"CALLDATACOPY\",\n    \"38\": \"CODESIZE\",\n    \"39\": \"CODECOPY\",\n    \"3a\": \"GASPRICE\",\n    \"3b\": \"EXTCODESIZE\",\n    \"3c\": \"EXTCODECOPY\",\n    \"3d\": \"RETURNDATASIZE\",\n    \"3e\": \"RETURNDATACOPY\",\n    \"3f\": \"EXTCODEHASH\",\n    \"40\": \"BLOCKHASH\",\n    \"41\": \"COINBASE\",\n    \"42\": \"TIMESTAMP\",\n    \"43\": \"NUMBER\",\n    \"44\": \"DIFFICULTY\",\n    \"45\": \"GASLIMIT\",\n    \"50\": \"POP\",\n    \"51\": \"MLOAD\",\n    \"52\": \"MSTORE\",\n    \"53\": \"MSTORE8\",\n    \"54\": \"SLOAD\",\n    \"55\": \"SSTORE\",\n    \"56\": \"JUMP\",\n    \"57\": \"JUMPI\",\n    \"58\": \"PC\",\n    \"59\": \"MSIZE\",\n    \"5a\": \"GAS\",\n    \"5b\": \"JUMPDEST\",\n    \"60\": \"PUSH1\",\n    \"61\": \"PUSH2\",\n    \"62\": \"PUSH3\",\n    \"63\": \"PUSH4\",\n    \"64\": \"PUSH5\",\n    \"65\": \"PUSH6\",\n    \"66\": \"PUSH7\",\n    \"67\": \"PUSH8\",\n    \"68\": \"PUSH9\",\n    \"69\": \"PUSH10\",\n    \"6a\": \"PUSH11\",\n    \"6b\": \"PUSH12\",\n    \"6c\": \"PUSH13\",\n    \"6d\": \"PUSH14\",\n    \"6e\": \"PUSH15\",\n    \"6f\": \"PUSH16\",\n    \"70\": \"PUSH17\",\n    \"71\": \"PUSH18\",\n    \"72\": \"PUSH19\",\n    \"73\": \"PUSH20\",\n    \"74\": \"PUSH21\",\n    \"75\": \"PUSH22\",\n    \"76\": \"PUSH23\",\n    \"77\": \"PUSH24\",\n    \"78\": \"PUSH25\",\n    \"79\": \"PUSH26\",\n    \"7a\": \"PUSH27\",\n    \"7b\": \"PUSH28\",\n    \"7c\": \"PUSH29\",\n    \"7d\": \"PUSH30\",\n    \"7e\": \"PUSH31\",\n    \"7f\": \"PUSH32\",\n    \"80\": \"DUP1\",\n    \"81\": \"DUP2\",\n    \"82\": \"DUP3\",\n    \"83\": \"DUP4\",\n    \"84\": \"DUP5\",\n    \"85\": \"DUP6\",\n    \"86\": \"DUP7\",\n    \"87\": \"DUP8\",\n    \"88\": \"DUP9\",\n    \"89\": \"DUP10\",\n    \"8a\": \"DUP11\",\n    \"8b\": \"DUP12\",\n    \"8c\": \"DUP13\",\n    \"8d\": \"DUP14\",\n    \"8e\": \"DUP15\",\n    \"8f\": \"DUP16\",\n    \"90\": \"SWAP1\",\n    \"91\": \"SWAP2\",\n    \"92\": \"SWAP3\",\n    \"93\": \"SWAP4\",\n    \"94\": \"SWAP5\",\n    \"95\": \"SWAP6\",\n    \"96\": \"SWAP7\",\n    \"97\": \"SWAP8\",\n    \"98\": \"SWAP9\",\n    \"99\": \"SWAP10\",\n    \"9a\": \"SWAP11\",\n    \"9b\": \"SWAP12\",\n    \"9c\": \"SWAP13\",\n    \"9d\": \"SWAP14\",\n    \"9e\": \"SWAP15\",\n    \"9f\": \"SWAP16\",\n    \"a0\": \"LOG0\",\n    \"a1\": \"LOG1\",\n    \"a2\": \"LOG2\",\n    \"a3\": \"LOG3\",\n    \"a4\": \"LOG4\",\n    \"f0\": \"CREATE\",\n    \"f1\": \"CALL\",\n    \"f2\": \"CALLCODE\",\n    \"f3\": \"RETURN\",\n    \"f4\": \"DELEGATECALL\",\n    \"f5\": \"CREATE2\",\n    \"fa\": \"STATICCALL\",\n    \"fe\": \"INVALID\",\n    \"fd\": \"REVERT\",\n    \"ff\": \"SELFDESTRUCT\"\n\n    // Other codes (extensions etc)\n    // See https://github.com/trailofbits/evm-opcodes\n    // To add support for these, we need to figure out which one accepts parameters and update the decoder accordingly\n    // \"b0\": \"JUMPTO\",\n    // \"b1\": \"JUMPIF\",\n    // \"b2\": \"JUMPSUB\",\n    // \"b4\": \"JUMPSUBV\",\n    // \"b5\": \"BEGINSUB\",\n    // \"b6\": \"BEGINDATA\",\n    // \"b8\": \"RETURNSUB\",\n    // \"b9\": \"PUTLOCAL\",\n    // \"ba\": \"GETLOCAL\",\n    // \"e1\": \"SLOADBYTES\",\n    // \"e2\": \"SSTOREBYTES\",\n    // \"e3\": \"SSIZE\",\n    // \"f5\": \"CALLBLACKBOX\",\n    // \"fb\": \"CREATE2\",\n    // \"fc\": \"TXEXECGAS\",\n};\n","import { evmOpcodes } from \"./evmOpcodes\";\n\n// See https://microsoft.github.io/monaco-editor/monarch.html\nexport const evmLanguage: import(\"monaco-editor/esm/vs/editor/editor.api\").languages.IMonarchLanguage = {\n    keywords: Object.keys(evmOpcodes).map(k => evmOpcodes[k]),\n    unknown: [ \"UNKNOWN\" ],\n\n    // The main tokenizer for our languages\n    tokenizer: {\n      root: [\n        // identifiers and keywords\n        [/[A-Z][\\w\\-\\.']*/, { cases: { \"@keywords\": \"keyword\", \"@unknown\": \"invalid\" } }],\n\n        // whitespace\n        { include: \"@whitespace\" },\n\n        // numbers\n        [/0[xX][0-9a-fA-F]+/, \"number\"]\n\n      ],\n\n      whitespace: [\n        [/[ \\t\\r\\n]+/, \"white\"],\n        [/;.*$/,    \"comment\"]\n      ]\n    }\n  } as import(\"monaco-editor/esm/vs/editor/editor.api\").languages.IMonarchLanguage;\n","import { evmOpcodes } from \"./evmOpcodes\";\n\n/**\n * See https://www.etherchain.org/javascripts/disasm.js\n */\nexport function evmDisasm(byteCode: string) {\n    let codes = byteCode.match(/(..?)/g)!;\n\n    let dis = \"\";\n\n    for (let i = 0; i < codes.length; i++) {\n        let opcode = evmOpcodes[codes[i]];\n\n        if (!opcode) {\n            // tslint:disable-next-line:no-console\n            console.warn(`Unknown opcode (0x${codes[i]})`);\n            dis = dis + `UNKNOWN (0x${codes[i]}) \\n`;\n        } else if (opcode.substr(0, 4) === \"PUSH\") {\n            let length = parseInt(opcode.replace(\"PUSH\", \"\"), 10);\n            let data = codes.slice(i + 1, i + length + 1).join(\"\");\n            dis = dis + opcode + \" 0x\" + data + \"\\n\";\n            i = i + length;\n        } else {\n            dis = dis + opcode + \"\\n\";\n        }\n    }\n\n    return dis;\n}\n","const BEGIN_MARKER = \"a165\";\nconst END_MARKER = \"0029\";\nconst SWARM_SOURCE_LENGTH = 86;\n\nexport function removeSwarmSourceFromByteCode(byteCode: string) {\n    /**\n     * Extract last chars where the swarmsource should be located\n     */\n    let swarmSource = byteCode.substring(byteCode.length - SWARM_SOURCE_LENGTH);\n    /**\n     * Validate if it is a real swarmsource\n     */\n    if (validateSwarmSource(swarmSource)) {\n        /**\n         * RETURN the bytecode without the swarm\n         */\n        return byteCode.substring(0, byteCode.length - SWARM_SOURCE_LENGTH);\n    } else {\n        /**\n         * Otherwise return the original string\n         */\n        return byteCode;\n    }\n}\n\nfunction validateSwarmSource(swarmSource: string) {\n    if (swarmSource.length !== SWARM_SOURCE_LENGTH) {\n        return false;\n    }\n    if (swarmSource.substring(0, BEGIN_MARKER.length) !== BEGIN_MARKER) {\n        return false;\n    }\n    if (swarmSource.substring(swarmSource.length - END_MARKER.length) !== END_MARKER) {\n        return false;\n    }\n    return true;\n}\n","import * as React from \"react\";\nimport { CopyIcon } from \"@alethio/ui/lib/icon/CopyIcon\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport { FloatingActionBar } from \"@alethio/ui/lib/overlay/FloatingActionBar\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { SwitchIcon } from \"@alethio/ui/lib/icon/SwitchIcon\";\nimport { Button } from \"@alethio/ui/lib/control/Button\";\nimport { Clipboard } from \"@puzzl/browser/lib/Clipboard\";\n\nexport interface ICreationCodeSectionProps {\n    byteCode: string;\n    opCode: string;\n    byteCodeElement: React.ReactElement<{}>;\n    opCodeElement: React.ReactElement<{}>;\n    translation: ITranslation;\n}\n\n@observer\nexport class CreationCodeSection extends React.Component<ICreationCodeSectionProps> {\n    @observable\n    private showOpCode = false;\n\n    render() {\n        let { translation: tr, byteCodeElement, opCodeElement } = this.props;\n\n        return (\n            <div>\n                { this.showOpCode ?\n                // Make sure source code element is destroyed/re-mounted every time\n                <div key={1}>{opCodeElement}</div> :\n                <div key={2}>{byteCodeElement}</div>\n                }\n                <FloatingActionBar>\n                    <Button floating Icon={CopyIcon} onClick={this.handleCopyCode}>{\n                        tr.get(\"accountView.contract.sourceCode.copyCode.label\")\n                    }</Button>\n                    <Button floating Icon={SwitchIcon} onClick={this.toggleOpCode}>{\n                        this.showOpCode ?\n                            tr.get(\"accountView.contract.accountCode.switch.byteCode.label\") :\n                            tr.get(\"accountView.contract.accountCode.switch.opCode.label\")\n                    }</Button>\n                </FloatingActionBar>\n            </div>\n        );\n    }\n\n    private handleCopyCode = () => {\n        new Clipboard(document).copy(this.showOpCode ? this.props.opCode : this.props.byteCode);\n    }\n\n    private toggleOpCode = () => {\n        this.showOpCode = !this.showOpCode;\n    }\n}\n","import React from \"react\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport { SourceCodeAsyncRenderer } from \"./SourceCodeAsyncRenderer\";\nimport { evmLanguage } from \"./evmLanguage\";\nimport { evmDisasm } from \"./evmDisasm\";\nimport { removeSwarmSourceFromByteCode } from \"./extractSwarmSourceFromByteCode\";\nimport { CreationCodeSection } from \"./CreationCodeSection\";\n\nexport class AccountCodeRenderer {\n    constructor(private sourceCodeAsyncRenderer: SourceCodeAsyncRenderer) {\n\n    }\n    /**\n     * @param accountCodeLoader we pass a thunk instead of the account code so we can load it in parallel\n     */\n    async render(accountCodeLoader: () => Promise<string>, translation: ITranslation) {\n        let [accountCode, monaco] = await Promise.all([\n            accountCodeLoader(),\n            import(\"monaco-editor/esm/vs/editor/editor.api\"),\n            this.sourceCodeAsyncRenderer.load()\n        ]);\n\n        // Setup syntax highlighting for op codes view\n        monaco.languages.register({ id: \"evm\"});\n        monaco.languages.setMonarchTokensProvider(\"evm\", evmLanguage);\n        let byteCodeEl = this.sourceCodeAsyncRenderer.render(\n            accountCode,\n            \"\",\n            { wordWrap: \"on\", lineNumbers: \"off\" }\n        );\n\n        let opCode = evmDisasm(removeSwarmSourceFromByteCode(accountCode));\n        let opCodeEl = this.sourceCodeAsyncRenderer.render(opCode, \"evm\");\n\n        return <CreationCodeSection\n            opCode={opCode}\n            opCodeElement={opCodeEl}\n            byteCode={accountCode}\n            byteCodeElement={byteCodeEl}\n            translation={translation}\n        />;\n    }\n}\n","import * as React from \"react\";\nimport { observable } from \"mobx\";\nimport { observer, PropTypes } from \"mobx-react\";\nimport { IAccordionItemConfig } from \"./IAccordionItemConfig\";\nimport { LayoutRow } from \"../../layout/content/LayoutRow\";\nimport { LayoutRowItem } from \"../../layout/content/LayoutRowItem\";\nimport { Label } from \"../../data/Label\";\nimport { DomNodeProxy } from \"../../util/react/DomNodeProxy\";\nimport { AccordionState } from \"./internal/AccordionState\";\nimport { AccordionContentWrapper } from \"./internal/AccordionContentWrapper\";\nimport { Height } from \"../../fx/Height\";\nimport { AccordionItemState } from \"./AccordionItemState\";\nimport { AccordionItemContentStatus } from \"./AccordionItemContentStatus\";\nimport { IAccordionVerticalProps } from \"./AccordionVertical\";\n\nexport interface IAccordionHorizontalProps<TItemConfig extends IAccordionItemConfig> {\n    label: string;\n    noDataContent: React.ReactElement<{}>;\n    loadingText: string;\n    errorText: string;\n    contentAnimSeconds?: number;\n    children?: React.ReactNode;\n    onContentError(e: any, item: AccordionItemState<TItemConfig>): void;\n    renderExpander(args: {\n        config: TItemConfig;\n        isOpen: boolean;\n        onClick(): void;\n    }): React.ReactElement<{}>;\n    renderContent?(args: {\n        content?: React.ReactElement<{}>;\n        status: AccordionItemContentStatus;\n        arrowPosition?: number;\n        config: TItemConfig;\n    }): React.ReactElement<{}>;\n}\n\n/**\n * Accordion with async loading that uses the standard layout row/item components to display its data\n * Uses a horizontal layout, with expanders on the same row\n *\n * Shows loading/error/no data states\n */\n@observer\nexport class AccordionHorizontal<TItemConfig extends IAccordionItemConfig>\nextends React.Component<IAccordionHorizontalProps<TItemConfig>> {\n    static defaultProps: Partial<IAccordionVerticalProps<any>> = {\n        contentAnimSeconds: .2\n    };\n\n    // We use legacy context because the accordion and the children\n    // may be instantiated from different apps library instances and the createContext API won't work in this case\n    /** @internal */\n    static childContextTypes = {\n        // Just so we don't have to import react prop-types. We don't care about the shape anyway\n        accordionState: PropTypes.objectOrObservableObject\n    };\n    /** @internal */\n    private accordionState: AccordionState<TItemConfig>;\n\n    @observable\n    private expanderEls = new Map<number, HTMLElement>();\n    private containerOffsetLeft: number | undefined;\n\n    constructor(props: IAccordionHorizontalProps<TItemConfig>) {\n        super(props);\n\n        this.accordionState = new AccordionState<TItemConfig>(this.props.onContentError);\n    }\n\n    /** @internal */\n    getChildContext() {\n        return { accordionState: this.accordionState };\n    }\n\n    render() {\n        return <>\n            { /* Just make sure there wasn't something extra besides <AccordionItem>-s, which return null */ }\n            <div style={{ position: \"fixed\", top: -10000, left: -10000 }}>\n                { /* Children aren't actually visible, we just use this method as hook to add items dynamically */ }\n                { this.props.children }\n            </div>\n            { this.renderItems() }\n        </>;\n    }\n\n    private renderItems() {\n        if (!this.accordionState.getItems().length) {\n            return <LayoutRow>\n                <LayoutRowItem>\n                    <Label>{this.props.label}</Label>\n                    {this.props.noDataContent}\n                </LayoutRowItem>\n            </LayoutRow>;\n        }\n\n        let items = this.accordionState.getItems();\n        let activeItem = this.accordionState.getActiveItem();\n\n        return <div ref={this.handleContainerRef}>\n            <LayoutRow>\n                <LayoutRowItem>\n                    <Label>{this.props.label}</Label>\n                    <div style={{ display: \"flex\" }}>\n                        { items.map((item, idx) => <React.Fragment key={idx}>\n                            { this.renderExpander({\n                                config: item.config,\n                                idx,\n                                isOpen: item === activeItem,\n                                onClick: item.onClick\n                            }) }\n                        </React.Fragment>) }\n                    </div>\n                </LayoutRowItem>\n            </LayoutRow>\n            <Height duration={this.props.contentAnimSeconds!}>\n                { activeItem && <AccordionContentWrapper<TItemConfig>\n                    content={activeItem.content}\n                    config={activeItem.config}\n                    status={activeItem.contentStatus}\n                    arrowPosition={this.getContentArrowPosition(activeItem.index)}\n                    loadingDelay={this.props.contentAnimSeconds!}\n                    loadingText={this.props.loadingText}\n                    errorText={this.props.errorText}\n                    renderContent={this.props.renderContent}\n                />}\n            </Height>\n        </div>;\n    }\n\n    private renderExpander({config, idx, isOpen, onClick}: {\n        config: TItemConfig;\n        idx: number;\n        isOpen: boolean;\n        onClick(): void;\n    }) {\n        return <DomNodeProxy\n            onMount={ref => this.expanderEls.set(idx, ref)}\n            onUnmount={ref => this.expanderEls.delete(idx)}\n        >\n            { this.props.renderExpander({\n                config,\n                isOpen,\n                onClick\n            }) }\n        </DomNodeProxy>;\n    }\n\n    private handleContainerRef = (ref: HTMLElement | null) => { if (ref) {\n        this.containerOffsetLeft = ref.offsetLeft;\n    }}\n\n    private getContentArrowPosition(idx: number) {\n        if (this.expanderEls.size && this.containerOffsetLeft) {\n            if (!this.expanderEls.has(idx)) {\n                throw new RangeError(`Index \"${idx}\" out of range`);\n            }\n            let expanderEl = this.expanderEls.get(idx)!;\n            let expanderWidth = expanderEl.offsetWidth;\n            return expanderEl.offsetLeft - this.containerOffsetLeft + expanderWidth / 2;\n        }\n\n        return void 0;\n    }\n}\n","import * as React from \"react\";\r\nimport { DomNodeProxy } from \"./DomNodeProxy\";\r\n\r\nexport interface IScrollIntoViewProps {\r\n    children: React.ReactElement<{}> | undefined;\r\n    /** Delay in seconds */\r\n    delay?: number;\r\n}\r\n\r\nexport class ScrollIntoView extends React.Component<IScrollIntoViewProps> {\r\n    private ref: HTMLElement | undefined;\r\n    private scrollTimeoutId: number | undefined;\r\n\r\n    componentDidMount() {\r\n        this.scrollTimeoutId = setTimeout(() => {\r\n            this.ref!.scrollIntoView({\r\n                behavior: \"smooth\"\r\n            });\r\n        }, (this.props.delay || 0) * 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.scrollTimeoutId) {\r\n            clearTimeout(this.scrollTimeoutId);\r\n            this.scrollTimeoutId = void 0;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ( this.props.children ?\r\n            <DomNodeProxy\r\n                onMount={ref => this.ref = ref}\r\n                onUnmount={() => this.ref = void 0}\r\n            >{this.props.children}</DomNodeProxy>\r\n         : null );\r\n    }\r\n}\r\n","import * as React from \"react\";\nimport {\n    AccordionHorizontal, IAccordionHorizontalProps\n} from \"@alethio/ui/lib/control/accordion/AccordionHorizontal\";\nimport { Expander } from \"@alethio/ui/lib/control/expander/Expander\";\nimport { IAccordionItemConfig } from \"@alethio/ui/lib/control/accordion/IAccordionItemConfig\";\nimport { AccordionContentFrame } from \"@alethio/ui/lib/control/accordion/AccordionContentFrame\";\nimport { ScrollIntoView } from \"@alethio/ui/lib/util/react/ScrollIntoView\";\nimport { AccordionItemContentStatus } from \"@alethio/ui/lib/control/accordion/AccordionItemContentStatus\";\nimport { ErrorBox } from \"@alethio/ui/lib/ErrorBox\";\nimport { ILogger } from \"plugin-api/ILogger\";\nimport { ThemeContext } from \"plugin-api/ThemeContext\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport styled from \"@alethio/explorer-ui/lib/styled-components\";\nimport { NotAvailableBox } from \"app/shared/component/NotAvailableBox\";\nimport { LoadingBox } from \"app/shared/component/LoadingBox\";\n\nconst CONTENT_ANIM_SECONDS = .2;\n\nconst ExpanderWrapper = styled.div`\n    &:first-child {\n        margin-left: 0;\n    }\n    margin-left: 8px;\n`;\n\nconst AccordionFrameWrapper = styled.div`\n    margin-bottom: -${({theme}) => theme.spacing.contentBottom}px;\n`;\n\nexport interface IContractAccordionItemConfig extends IAccordionItemConfig {\n    label: string;\n    disabled?: boolean;\n    value?: number | undefined;\n}\n\nexport interface IContractAccordionProps {\n    contentHeight: number;\n    translation: ITranslation;\n    locale: string;\n    logger: ILogger;\n}\n\nexport class ContractAccordion extends React.PureComponent<IContractAccordionProps> {\n    render() {\n        let { translation: tr } = this.props;\n\n        return <>\n            <AccordionHorizontal\n                label={tr.get(\"accountView.contract.info.label\")}\n                noDataContent={<NotAvailableBox translation={tr} />}\n                renderExpander={this.renderExpander}\n                renderContent={this.renderContent}\n                loadingText={`${tr.get(\"general.loading\")}...`}\n                contentAnimSeconds={CONTENT_ANIM_SECONDS}\n                errorText={tr.get(\"general.error\")}\n                onContentError={(e, item) => {\n                    this.props.logger.error(`Couldn't load content for contract details tab #${item.index}`, e);\n                }}\n            >{this.props.children}</AccordionHorizontal>\n        </>;\n    }\n\n    private renderExpander: IAccordionHorizontalProps<IContractAccordionItemConfig>[\"renderExpander\"] =\n    ({config, isOpen, onClick}) => {\n        return <ExpanderWrapper><Expander\n            label={config.label}\n            value={config.value}\n            disabled={config.disabled}\n            open={isOpen}\n            locale={this.props.locale}\n            onClick={onClick}\n        /></ExpanderWrapper>;\n    }\n\n    private renderContent: IAccordionHorizontalProps<IContractAccordionItemConfig>[\"renderContent\"] =\n    ({content, status, arrowPosition}) => {\n\n        return <ThemeContext.Consumer>{ theme =>\n            <AccordionFrameWrapper style={{marginLeft: -theme.spacing.sidebarWidth}}>\n                <AccordionContentFrame arrowPosition={arrowPosition ?\n                    arrowPosition + theme.spacing.sidebarWidth :\n                    void 0\n                }>\n                    {/* key ensure component remounts/scrolls into view whenever status changes*/}\n                    {/* HACK: Seems waiting for height animation to finish is not enough so we add a bit extra */}\n                    <ScrollIntoView delay={CONTENT_ANIM_SECONDS + .1} key={status}>\n                        <div style={{ minHeight: this.props.contentHeight }}>\n                            { status === AccordionItemContentStatus.Loaded ?\n                                content :\n                                status === AccordionItemContentStatus.Error ?\n                                    <ErrorBox colors=\"secondary\">\n                                        {this.props.translation.get(\"accountView.contract.noData.text\")}\n                                    </ErrorBox> :\n                                    <LoadingBox colors=\"secondary\" translation={this.props.translation} />\n                            }\n                        </div>\n                    </ScrollIntoView>\n                </AccordionContentFrame>\n            </AccordionFrameWrapper>\n        }</ThemeContext.Consumer>;\n    }\n}\n","import * as React from \"react\";\nimport { LayoutRow } from \"@alethio/ui/lib/layout/content/LayoutRow\";\nimport { LayoutRowItem } from \"@alethio/ui/lib/layout/content/LayoutRowItem\";\nimport { Label } from \"@alethio/ui/lib/data/Label\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport { ValueBox } from \"@alethio/ui/lib/layout/content/box/ValueBox\";\nimport { SourceCodeAsyncRenderer } from \"app/shared/component/sourceCode/SourceCodeAsyncRenderer\";\nimport { SourceCodeSection } from \"app/eth-extended/module/account/contract/component/SourceCodeSection\";\nimport { ConstructorArgsSection } from \"./ConstructorArgsSection\";\nimport { IContractAccountDetails } from \"app/eth-extended/data/account/details/IContractAccountDetails\";\nimport { ContractDetailsStore } from \"app/eth-extended/data/contract/ContractDetailsStore\";\nimport { StringData } from \"@alethio/ui/lib/data/StringData\";\nimport { ErrorBox } from \"@alethio/ui/lib/ErrorBox\";\nimport { ReadContractSection } from \"app/eth-extended/module/account/contract/component/ReadContractSection\";\nimport { ContractWeb3Api } from \"app/eth-extended/data/contract/ContractWeb3Api\";\nimport { ILogger } from \"plugin-api/ILogger\";\nimport { AccountCodeRenderer } from \"app/shared/component/sourceCode/AccountCodeRenderer\";\nimport { ContractAccordion, IContractAccordionItemConfig } from \"app/shared/component/sourceCode/ContractAccordion\";\nimport { AccordionItem } from \"@alethio/ui/lib/control/accordion/AccordionItem\";\n\nconst ACCORDION_CONTENT_HEIGHT = 500;\n\nexport interface IContractDetailsProps {\n    accountDetails: IContractAccountDetails;\n    contractDetailsStore: ContractDetailsStore;\n    contractWeb3Api: ContractWeb3Api;\n    translation: ITranslation;\n    locale: string;\n    logger: ILogger;\n    accordionExtraItems: JSX.Element[] | undefined;\n}\n\nexport class ContractDetails extends React.PureComponent<IContractDetailsProps> {\n    render() {\n        let { translation: tr, accountDetails, locale, logger } = this.props;\n        let contractId = accountDetails.contractId;\n        let sourceCodeAsyncRenderer = new SourceCodeAsyncRenderer(ACCORDION_CONTENT_HEIGHT);\n\n        return <>\n            <LayoutRow>\n                <LayoutRowItem>\n                    <Label>{tr.get(\"accountView.contract.compilerVersion.label\")}</Label>\n                    <ValueBox>{accountDetails.compilerVersion || \"-\"}</ValueBox>\n                </LayoutRowItem>\n                <LayoutRowItem>\n                    <Label>{tr.get(\"accountView.contract.optimizer.label\")}</Label>\n                    <ValueBox>{\n                        accountDetails.optimizerEnabled !== void 0 ?\n                            ( accountDetails.optimizerEnabled ?\n                                tr.get(\"accountView.contract.optimizer.value.yes\") :\n                                tr.get(\"accountView.contract.optimizer.value.no\")\n                            ) : \"-\"\n                    }</ValueBox>\n                </LayoutRowItem>\n                <LayoutRowItem>\n                    <Label>{tr.get(\"accountView.contract.runs.label\")}</Label>\n                    <ValueBox>{\n                        accountDetails.optimizerRuns !== void 0 ?\n                            accountDetails.optimizerRuns :\n                            \"-\"\n                        }</ValueBox>\n                </LayoutRowItem>\n            </LayoutRow>\n            { accountDetails.swarmSource ?\n            <LayoutRow>\n                <LayoutRowItem>\n                    <Label>{tr.get(\"accountView.contract.swarmSource.label\")}</Label>\n                    <StringData>{accountDetails.swarmSource}</StringData>\n                </LayoutRowItem>\n            </LayoutRow>\n            : null }\n            <ContractAccordion\n                contentHeight={ACCORDION_CONTENT_HEIGHT}\n                locale={locale}\n                translation={tr}\n                logger={logger}\n            >\n                <AccordionItem<IContractAccordionItemConfig>\n                    label={tr.get(\"accountView.contract.sourceCode.label\")}\n                    disabled={!accountDetails.hasContractSourceCode}\n                    content={async () => {\n                        let [sourceCode] = await Promise.all([\n                            this.props.contractDetailsStore.fetchSourceCode(contractId)\n                                .then(s => {\n                                    if (!s) {\n                                        throw new Error(`Server returned empty source code`);\n                                    }\n                                    return s;\n                                }),\n                            sourceCodeAsyncRenderer.load()\n                        ]);\n\n                        let sourceCodeEl = sourceCodeAsyncRenderer.render(sourceCode, \"sol\");\n\n                        return <SourceCodeSection\n                            sourceCode={sourceCode}\n                            sourceCodeElement={sourceCodeEl}\n                            contractAddress={accountDetails.address}\n                            dataSource={accountDetails.contractDataSource}\n                            translation={tr}\n                        />;\n                    }}\n                />,\n                <AccordionItem<IContractAccordionItemConfig>\n                    label={tr.get(\"accountView.contract.abis.label\")}\n                    disabled={!accountDetails.hasContractAbi}\n                    content={async () => {\n                        let [contractAbi] = await Promise.all([\n                            this.props.contractDetailsStore.fetchAbi(contractId)\n                                .then(abi => {\n                                    let abiRawData = abi.getRawData();\n                                    if (!abiRawData) {\n                                        throw new Error(`Server returned empty ABI`);\n                                    }\n                                    return abiRawData;\n                                }),\n                            sourceCodeAsyncRenderer.load()\n                        ]);\n\n                        // Format/prettify JSON\n                        let formattedAbi = JSON.stringify(contractAbi, void 0, \"\\t\");\n                        let sourceCodeEl = sourceCodeAsyncRenderer.render(formattedAbi, \"json\");\n\n                        return <SourceCodeSection\n                            sourceCode={formattedAbi}\n                            sourceCodeElement={sourceCodeEl}\n                            contractAddress={accountDetails.address}\n                            dataSource={accountDetails.contractDataSource}\n                            translation={tr}\n                        />;\n                    }}\n                />,\n                <AccordionItem<IContractAccordionItemConfig>\n                    label={tr.get(\"accountView.contract.accountCode.label\")}\n                    disabled={!accountDetails.hasContractAccountCode}\n                    content={async () => {\n                        return new AccountCodeRenderer(sourceCodeAsyncRenderer).render(\n                            () => this.props.contractDetailsStore.fetchAccountCode(contractId)\n                                .then(code => {\n                                    if (!code) {\n                                        throw new Error(`Server returned no account code`);\n                                    }\n                                    return code;\n                                }),\n                            tr\n                        );\n                    }}\n                />,\n                <AccordionItem<IContractAccordionItemConfig>\n                    label={tr.get(\"accountView.contract.arguments.label\")}\n                    disabled={!accountDetails.constructorArgs.length}\n                    content={async () => {\n                        if (!accountDetails.constructorArgs.length) {\n                            return <ErrorBox colors=\"secondary\">\n                                {this.props.translation.get(\"accountView.contract.arguments.noArguments.label\")}\n                            </ErrorBox>;\n                        }\n                        let constructorArgsRaw = accountDetails.constructorArgs.join(\"\");\n                        let constructorArgsFormatted = accountDetails.constructorArgs\n                            .map((a, i) => `Arg [${i}] : ${a}`)\n                            .join(\"\\n\");\n\n                        await sourceCodeAsyncRenderer.load();\n                        let byteCodeEl = sourceCodeAsyncRenderer.render(\n                            constructorArgsRaw,\n                            \"\",\n                            { wordWrap: \"on\", lineNumbers: \"off\" }\n                        );\n                        let decodedArgsEl = sourceCodeAsyncRenderer.render(constructorArgsFormatted, \"\");\n\n                        return <ConstructorArgsSection\n                            byteCode={constructorArgsRaw}\n                            byteCodeElement={byteCodeEl}\n                            decodedArgs={constructorArgsFormatted}\n                            decodedArgsElement={decodedArgsEl}\n                            translation={tr}\n                        />;\n                    }}\n                />,\n                <AccordionItem<IContractAccordionItemConfig>\n                    label={tr.get(\"accountView.contract.read.label\")}\n                    disabled={!accountDetails.hasContractAbi}\n                    content={async () => {\n                        let contractAbi = await this.props.contractDetailsStore.fetchAbi(contractId);\n                        return <ReadContractSection\n                            abi={contractAbi}\n                            contractAddress={accountDetails.address}\n                            contractWeb3Api={this.props.contractWeb3Api}\n                            translation={tr}\n                            logger={this.props.logger}\n                        />;\n                    }}\n                />\n                {this.props.accordionExtraItems}\n            </ContractAccordion>\n        </>;\n    }\n}\n","import { IAccountDetails } from \"app/eth-extended/data/account/details/IAccountDetails\";\nimport { IContractAccountDetails } from \"app/eth-extended/data/account/details/IContractAccountDetails\";\nimport { AccountType } from \"app/shared/data/account/AccountType\";\n\nexport function isContractAccountDetails(accountDetails: IAccountDetails): accountDetails is IContractAccountDetails {\n    return accountDetails.type === AccountType.Contract;\n}\n","import * as React from \"react\";\nimport { IAccountDetails } from \"app/eth-extended/data/account/details/IAccountDetails\";\nimport { ITranslation } from \"plugin-api/ITranslation\";\nimport { ContractDetails } from \"app/eth-extended/module/account/contract/component/ContractDetails\";\nimport { isContractAccountDetails } from \"app/eth-extended/data/account/details/isContractAccountDetails\";\nimport { ContractDetailsStore } from \"app/eth-extended/data/contract/ContractDetailsStore\";\nimport { ContractWeb3Api } from \"app/eth-extended/data/contract/ContractWeb3Api\";\nimport { ILogger } from \"plugin-api/ILogger\";\nimport { ResponsiveContainer, MinimumWidth } from \"@alethio/ui/lib/layout/responsive/ResponsiveContainer\";\n\nexport interface IContractProps {\n    locale: string;\n    translation: ITranslation;\n    accountHash: string;\n    accountDetails: IAccountDetails;\n    contractDetailsStore: ContractDetailsStore;\n    contractWeb3Api: ContractWeb3Api;\n    logger: ILogger;\n    accordionExtraItems: JSX.Element[] | undefined;\n}\n\nexport class Contract extends React.PureComponent<IContractProps> {\n\n    render() {\n        let locale = this.props.locale;\n        let tr = this.props.translation;\n        let account = this.props.accountDetails;\n\n        return isContractAccountDetails(account) ?\n            <ResponsiveContainer behavior=\"hide\" forScreenWidth={{lowerThan: MinimumWidth.ForFullView}}>\n                <ContractDetails\n                    accountDetails={account}\n                    contractDetailsStore={this.props.contractDetailsStore}\n                    contractWeb3Api={this.props.contractWeb3Api}\n                    translation={tr}\n                    locale={locale}\n                    logger={this.props.logger}\n                    accordionExtraItems={this.props.accordionExtraItems}\n                />\n            </ResponsiveContainer>\n        : null;\n    }\n}\n","import * as React from \"react\";\r\nimport styled, { css } from \"../styled-components\";\r\nimport { Box, IBoxProps } from \"../layout/content/box/Box\";\r\nimport { IBoxColorsThunk } from \"../layout/content/box/IBoxColorsThunk\";\r\nimport { HoverState } from \"../util/react/HoverState\";\r\nimport { ITheme } from \"../theme/ITheme\";\r\n\r\ninterface IButtonRootProps {\r\n    floating?: boolean;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst ButtonRoot = styled<IButtonRootProps, \"div\">(\"div\")`\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    ${props => props.floating ? css`\r\n    box-shadow: 0 8px 16px rgba(167, 181, 209, 0.6);\r\n    ` : ``}\r\n    ${props => props.disabled ? css`\r\n    opacity: 0.75;\r\n    ` : void 0}\r\n`;\r\n\r\nconst StyledBox = styled(Box)`\r\n    border-radius: 4px;\r\n    transition: background-color .2s ease-in-out, border-color .2s ease-in-out;\r\n`;\r\n\r\ntype ButtonColors = \"primary\" | \"secondary\";\r\n\r\nconst colorSets: Record<ButtonColors, (hover: boolean) => IBoxColorsThunk<ITheme>> = {\r\n    primary: (hover) => (theme) => ({\r\n        background: hover ? theme.colors.buttonPrimaryBgActive : theme.colors.buttonPrimaryBg,\r\n        text: theme.colors.buttonPrimaryText\r\n    }),\r\n    secondary: (hover) => (theme) => ({\r\n        background: hover ? theme.colors.buttonSecondaryBgActive : theme.colors.buttonSecondaryBg,\r\n        text: theme.colors.buttonSecondaryText\r\n    })\r\n};\r\n\r\nexport interface IButtonProps {\r\n    Icon?: IBoxProps[\"Icon\"];\r\n    iconPlacement?: IBoxProps[\"iconPlacement\"];\r\n    colors?: ButtonColors;\r\n    floating?: boolean;\r\n    children?: string;\r\n    disabled?: boolean;\r\n    onClick?(): void;\r\n}\r\n\r\nexport class Button extends React.Component<IButtonProps> {\r\n    static defaultProps: Partial<IButtonProps> = {\r\n        colors: \"secondary\"\r\n    };\r\n\r\n    render() {\r\n        let { Icon, iconPlacement, floating, disabled, colors, children} = this.props;\r\n        return (\r\n            <HoverState>\r\n                {(hover) =>\r\n                <ButtonRoot\r\n                    onClick={!this.props.disabled ? this.props.onClick : void 0}\r\n                    floating={floating}\r\n                    disabled={disabled}\r\n                >\r\n                    <StyledBox\r\n                        Icon={Icon}\r\n                        iconPlacement={iconPlacement ? iconPlacement : \"left\"}\r\n                        colors={colorSets[colors!](!this.props.disabled ? hover : false)}\r\n                        metrics={{\r\n                            fontSize: 12,\r\n                            lineHeight: 14,\r\n                            fontWeight: 700,\r\n                            height: 36,\r\n                            iconSize: 24,\r\n                            letterSpacing: .4,\r\n                            textPaddingTop: 9,\r\n                            textPaddingX: 16\r\n                        }}\r\n                    >{children}</StyledBox>\r\n                </ButtonRoot>\r\n                }\r\n            </HoverState>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}